# name of the library -- make sure it is in the object directory
LIBNAME = libthornado.a
LIBDIR = ../../../object
INCDIR = ../../../include

# what the makefile should do -- this is the default thing to do
.PHONY: default
default: $(LIBNAME)

# Import site specific information.
# At setup time, this file will exist in the local library directory.
include ../../../Makefile.h

# these should get defined by invoking the Makefile from FLASH
MOMENT_CLOSURE = MINERBO
MICROPHYSICS = WEAKLIB
TWOMOMENT_ORDER = ORDER_V

# Import thornado Makefiles
THORNADO_DIR = ../../
include $(THORNADO_DIR)/Build/Makefile_GPU
include $(THORNADO_DIR)/Build/Makefile_Defines
include $(THORNADO_DIR)/Build/Makefile_Path
include $(THORNADO_DIR)/Build/Makefile_Thornado_Dependencies

## DEFINES   += -DTHORNADO_DEBUG

# BUILDFLAG can be passed to the Makefile to choose specific
# compilation flags (one of OPT,TEST,DEBUG).

ifdef BUILDFLAG
  FFLAGS = $(FFLAGS_$(BUILDFLAG))
else
  FFLAGS = $(FFLAGS_OPT)
endif
FFLAGS += $(FFLAGS_HDF5)
FFLAGS += $(FFLAGS_LAPACK)
ifeq ($(USE_CUDA),TRUE)
  FFLAGS += $(FFLAGS_CUDA)
endif
ifeq ($(USE_HIP),TRUE)
  FFLAGS += $(FFLAGS_ROCM)
endif
ifeq ($(USE_ONEMKL),TRUE)
  FFLAGS += $(FFLAGS_ONEMKL)
endif
ifeq ($(USE_OACC),TRUE)
  FFLAGS += $(FFLAGS_OACC)
endif
ifeq ($(USE_OMP_OL),TRUE)
  FFLAGS += $(FFLAGS_OMP_OL)
endif
ifeq ($(USE_OMP),TRUE)
  FFLAGS += $(OPENMP)
endif
ifeq ($(MICROPHYSICS),WEAKLIB)
  FFLAGS += -I../../../../weaklib/include
endif

# command for generating a library
MKLIB = ar -rcs

OBJS = \
       KindModule.o \
       UnitsModule.o \
       PhysicalConstantsModule.o \
       ProgramHeaderModule.o \
       ArrayUtilitiesModule.o \
       SubcellReconstructionModule.o \
       TimersModule.o \
       QuadratureModule.o \
       LagrangePolynomialsModule.o \
       PolynomialBasisModuleX_Lagrange.o \
       LinearAlgebraModule.o \
       DeviceModule.o \
       ReferenceElementModuleE.o \
       ReferenceElementModuleX.o \
       ReferenceElementModule.o \
       UtilitiesModule.o \
       PolynomialBasisModule_Lagrange.o \
       PolynomialBasisModule_Legendre.o \
       PolynomialBasisMappingModule.o \
       ReferenceElementModuleX_Lagrange.o \
       ReferenceElementModuleE_Lagrange.o \
       ReferenceElementModule_Lagrange.o \
       ReferenceElementModuleZ.o \
       MeshModule.o \
       GeometryFieldsModuleE.o \
       GeometryFieldsModule.o \
       GeometryComputationModule.o \
       GeometryComputationModuleE.o \
       GeometryComputationModule_XCFC.o \
       FluidFieldsModule.o \
       RadiationFieldsModule.o \
       EquationOfStateModule.o \
       EquationOfStateModule_TABLE.o \
       EquationOfStateModule_IDEAL.o \
       Euler_BoundaryConditionsModule.o \
       Euler_CharacteristicDecompositionModule.o \
       Euler_CharacteristicDecompositionModule_NonRelativistic_IDEAL.o \
       Euler_CharacteristicDecompositionModule_NonRelativistic_TABLE.o \
       Euler_dgDiscretizationModule.o \
       Euler_DiscontinuityDetectionModule.o \
       Euler_UtilitiesModule.o \
       Euler_UtilitiesModule_NonRelativistic.o \
       Euler_SlopeLimiterModule_NonRelativistic_TABLE.o \
       Euler_PositivityLimiterModule_NonRelativistic_TABLE.o \
       Euler_ErrorModule.o \
       TimersModule_Euler.o \
       TwoMoment_ClosureModule.o \
       TwoMoment_PositivityLimiterModule.o \
       TwoMoment_DiscretizationModule_Streaming.o \
       TwoMoment_DiscretizationModule_Collisions_Neutrinos.o \
       TwoMoment_NeutrinoMatterSolverModule.o \
       TwoMoment_BoundaryConditionsModule.o \
       TwoMoment_UtilitiesModule.o \
       TwoMoment_MeshRefinementModule.o \
       TwoMoment_SlopeLimiterModule.o \
       TwoMoment_TimersModule.o \
       NeutrinoOpacitiesModule.o \
       OpacityModule_TABLE.o \
       NeutrinoOpacitiesComputationModule.o \
       ThornadoInitializationModule.o \
       TimeSteppingModule_Flash.o

ifeq ($(TWOMOMENT_ORDER),ORDER_V)
OBJS += \
       TwoMoment_TroubledCellIndicatorModule.o \
       TwoMoment_OpacityModule.o \
       TwoMoment_DiscretizationModule_Collisions.o
endif

ifeq ($(USE_CUDA),TRUE)
OBJS += \
  CudaModule.o
else ifeq ($(USE_HIP),TRUE)
OBJS += \
  HipModule.o
endif

ifeq ($(USE_OACC),TRUE)
OBJS += \
       OpenACCModule.o
else ifeq ($(USE_OMP_OL),TRUE)
OBJS += \
       OpenMPModule.o
endif

ifeq ($(USE_CUBLAS),TRUE)
OBJS += \
  CublasModule.o CusolverModule.o CusparseModule.o
else ifeq ($(USE_ROCM),TRUE)
OBJS += \
  RocblasModule.o RocsolverModule.o RocsparseModule.o HipblasModule.o HipsparseModule.o
endif

ifeq ($(USE_MAGMA),TRUE)
OBJS += \
  MagmaModule.o
endif

$(LIBNAME): $(OBJS)
	$(MKLIB) $(LIBNAME) $(OBJS)
	cp $(LIBNAME) $(LIBDIR)
	cp *.mod $(INCDIR)

.SUFFIXES: .f90 .F90
%.o %.mod : %.f90
	$(FCOMP) $(FFLAGS) $(filter-out -qrealsize=8,$(f90FLAGS)) $(DEFINES) $< -o $@
%.o %.mod : %.F90
	$(FCOMP) $(FFLAGS) $(filter-out -qrealsize=8,$(F90FLAGS)) $(DEFINES) $< -o $@

.PHONY: clean
clean:
	rm -f $(LIBNAME) $(LIBDIR)/$(LIBNAME) *.mod $(INCDIR)/*.mod *.o *.mod *.i *.s *.lst *.a


ifeq ($(TWOMOMENT_ORDER),ORDER_1)
TimeSteppingModule_Flash.o: \
  KindModule.o \
  ProgramHeaderModule.o \
  ReferenceElementModule.o \
  UtilitiesModule.o \
  TimersModule.o \
  FluidFieldsModule.o \
  RadiationFieldsModule.o \
  TwoMoment_DiscretizationModule_Streaming.o \
  TwoMoment_DiscretizationModule_Collisions_Neutrinos.o \
  TwoMoment_PositivityLimiterModule.o \
  PhysicalConstantsModule.o \
  GeometryFieldsModuleE.o \
  GeometryFieldsModule.o  \
  TimeSteppingModule_Flash.F90

ThornadoInitializationModule.o: \
  KindModule.o \
  UnitsModule.o \
  ProgramHeaderModule.o \
  DeviceModule.o \
  TimersModule.o \
  QuadratureModule.o \
  ReferenceElementModuleX.o \
  ReferenceElementModuleE.o \
  ReferenceElementModule.o \
  PolynomialBasisModuleX_Lagrange.o \
  PolynomialBasisModule_Lagrange.o \
  ReferenceElementModuleX_Lagrange.o \
  ReferenceElementModuleE_Lagrange.o \
  ReferenceElementModule_Lagrange.o \
  SubcellReconstructionModule.o \
  EquationOfStateModule_TABLE.o \
  EquationOfStateModule_IDEAL.o \
  OpacityModule_TABLE.o \
  MeshModule.o \
  GeometryFieldsModule.o \
  GeometryFieldsModuleE.o \
  GeometryComputationModuleE.o \
  FluidFieldsModule.o \
  RadiationFieldsModule.o \
  TwoMoment_ClosureModule.o \
  TwoMoment_PositivityLimiterModule.o \
  TwoMoment_MeshRefinementModule.o \
  ThornadoInitializationModule.F90
else
TimeSteppingModule_Flash.o: \
  KindModule.o \
  ProgramHeaderModule.o \
  ReferenceElementModule.o \
  UtilitiesModule.o \
  TimersModule.o \
  FluidFieldsModule.o \
  RadiationFieldsModule.o \
  TwoMoment_UtilitiesModule.o \
  TwoMoment_TroubledCellIndicatorModule.o \
  PolynomialBasisMappingModule.o \
  TwoMoment_SlopeLimiterModule.o \
  TwoMoment_PositivityLimiterModule.o \
  Euler_BoundaryConditionsModule.o \
  TwoMoment_DiscretizationModule_Streaming.o \
  ReferenceElementModuleZ.o \
  TwoMoment_OpacityModule.o \
  TwoMoment_DiscretizationModule_Collisions.o \
  Euler_SlopeLimiterModule_NonRelativistic_TABLE.o \
  Euler_PositivityLimiterModule_NonRelativistic_TABLE.o \
  InputOutputModuleHDF.o \
  Euler_dgDiscretizationModule.o \
  TwoMoment_NeutrinoMatterSolverModule.o \
  TwoMoment_DiscretizationModule_Collisions_Neutrinos.o \
  PhysicalConstantsModule.o \
  GeometryFieldsModuleE.o \
  GeometryFieldsModule.o  \
  TimeSteppingModule_Flash.F90

ThornadoInitializationModule.o: \
  KindModule.o \
  UnitsModule.o \
  ProgramHeaderModule.o \
  DeviceModule.o \
  TimersModule.o \
  QuadratureModule.o \
  ReferenceElementModuleX.o \
  ReferenceElementModuleE.o \
  ReferenceElementModule.o \
  PolynomialBasisModuleX_Lagrange.o \
  PolynomialBasisModule_Lagrange.o \
  ReferenceElementModuleX_Lagrange.o \
  ReferenceElementModuleE_Lagrange.o \
  ReferenceElementModule_Lagrange.o \
  SubcellReconstructionModule.o \
  EquationOfStateModule_TABLE.o \
  EquationOfStateModule_IDEAL.o \
  OpacityModule_TABLE.o \
  MeshModule.o \
  GeometryFieldsModule.o \
  GeometryFieldsModuleE.o \
  GeometryComputationModuleE.o \
  FluidFieldsModule.o \
  RadiationFieldsModule.o \
  TwoMoment_ClosureModule.o \
  TwoMoment_TimersModule.o \
  Euler_UtilitiesModule_NonRelativistic.o \
  TwoMoment_UtilitiesModule.o \
  TwoMoment_TroubledCellIndicatorModule.o \
  PolynomialBasisMappingModule.o \
  TwoMoment_SlopeLimiterModule.o \
  TwoMoment_PositivityLimiterModule.o \
  Euler_BoundaryConditionsModule.o \
  TwoMoment_DiscretizationModule_Streaming.o \
  ReferenceElementModuleZ.o \
  TwoMoment_OpacityModule.o \
  TwoMoment_DiscretizationModule_Collisions.o \
  Euler_SlopeLimiterModule_NonRelativistic_TABLE.o \
  Euler_PositivityLimiterModule_NonRelativistic_TABLE.o \
  InputOutputModuleHDF.o \
  Euler_dgDiscretizationModule.o \
  TwoMoment_MeshRefinementModule.o \
  TwoMoment_NeutrinoMatterSolverModule.o \
  ThornadoInitializationModule.F90
endif
