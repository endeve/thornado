function [ Interpolant ] = interpolate2D2D( x1, x2, x3, x4, x11D, x21D, x31D, x41D, Logflag, V4D,OS )
% function [ Interpolant ] =
%          interpolate2D2D( x1, x2, x3, x4, x11D, x21D, x31D, x41D, Logflag, V4D,OS )
% x1, x2 are (N,1) array
% x3, x4 are (M,1) array
% function value Interpolant is a (N,N,M) array

Interpolant = zeros( size( x1, 1 ), size( x2, 1 ), size( x3, 1 ) );

for k = 1 : size( x3, 1)
    
    ix3 = find( x31D < x3(k), 1, 'last' );
    ix4 = find( x41D < x4(k), 1, 'last' );
    
    if ( Logflag(3) == 1 ) dx3 = log10( x3(k) / x31D(ix3) ) / log10( x31D(ix3+1) / x31D(ix3) );
    elseif ( Logflag(3) == 0 ) dx3 = ( x3(k) - x31D(ix3) ) / ( x31D(ix3+1) - x31D(ix3) );
    end
    
    if ( Logflag(4) == 1 ) dx4 = log10( x4(k) / x41D(ix4) ) / log10( x41D(ix4+1) / x41D(ix4) );
    elseif ( Logflag(4) == 0 ) dx4 = ( x4(k) - x41D(ix4) ) / ( x41D(ix4+1) - x41D(ix4) );
    end
    
    for i = 1 : size( x2, 1 )
        
        ix2 = find( x21D < x2(i), 1, 'last' );
        
        if ( Logflag(2) == 1 ) dx2 = log10( x2(i) / x21D(ix2) ) / log10( x21D(ix2+1) / x21D(ix2) );
        elseif ( Logflag(2) == 0 ) dx2 = ( x2(i) - x21D(ix2) ) / ( x21D(ix2+1) - x21D(ix2) );
        end
        
        for j = 1 : size( x1, 1)
            
            ix1 = find( x11D < x1(j), 1, 'last' );
            
            
            
            if ( Logflag(1) == 1 ) dx1 = log10( x1(j) / x11D(ix1) ) / log10( x11D(ix1+1) / x11D(ix1) );
            elseif ( Logflag(1) == 0 ) dx1 = ( x1(j) - x11D(ix1) ) / ( x11D(ix1+1) - x11D(ix1) );
            end
    

    
    p0000 = log10( V4D( ix1  , ix2  , ix3  , ix4   ) + OS );
    p1000 = log10( V4D( ix1+1, ix2  , ix3  , ix4   ) + OS );
    p0100 = log10( V4D( ix1  , ix2+1, ix3  , ix4   ) + OS );
    p1100 = log10( V4D( ix1+1, ix2+1, ix3  , ix4   ) + OS );
    p0010 = log10( V4D( ix1  , ix2  , ix3+1, ix4   ) + OS );
    p1010 = log10( V4D( ix1+1, ix2  , ix3+1, ix4   ) + OS );
    p0110 = log10( V4D( ix1  , ix2+1, ix3+1, ix4   ) + OS );
    p1110 = log10( V4D( ix1+1, ix2+1, ix3+1, ix4   ) + OS );
    p0001 = log10( V4D( ix1  , ix2  , ix3  , ix4+1 ) + OS );
    p1001 = log10( V4D( ix1+1, ix2  , ix3  , ix4+1 ) + OS );
    p0101 = log10( V4D( ix1  , ix2+1, ix3  , ix4+1 ) + OS );
    p1101 = log10( V4D( ix1+1, ix2+1, ix3  , ix4+1 ) + OS );
    p0011 = log10( V4D( ix1  , ix2  , ix3+1, ix4+1 ) + OS );
    p1011 = log10( V4D( ix1+1, ix2  , ix3+1, ix4+1 ) + OS );
    p0111 = log10( V4D( ix1  , ix2+1, ix3+1, ix4+1 ) + OS );
    p1111 = log10( V4D( ix1+1, ix2+1, ix3+1, ix4+1 ) + OS );
    
    Interpolant(j,i,k)...
      = 10.0^(...          
      (1.0d0 - dx4) ...
            * (   (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0000   ...
                + (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) *           dx1  * p1000   ...
                + (1.0d0 - dx3) * ...
                                  dx2  * (1.0d0 - dx1) * p0100   ...
                + (1.0d0 - dx3) * ...
                                  dx2  *           dx1  * p1100   ...
                +           dx3  * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0010   ...
                +           dx3  * ...
                        (1.0d0 - dx2) *           dx1  * p1010   ...
                +           dx3  * ...
                                  dx2  * (1.0d0 - dx1) * p0110   ...
                +           dx3  * ...
                                  dx2  *           dx1  * p1110 ) ...
          +         dx4  ...
            * (   (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0001   ...
                + (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) *           dx1  * p1001   ...
                + (1.0d0 - dx3) * ...
                                  dx2  * (1.0d0 - dx1) * p0101   ...
                + (1.0d0 - dx3) * ...
                                  dx2  *           dx1  * p1101   ...
                +           dx3  * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0011   ...
                +           dx3  * ...
                        (1.0d0 - dx2) *           dx1  * p1011   ...
                +           dx3  * ...
                                  dx2  * (1.0d0 - dx1) * p0111   ...
                +           dx3  * ...
                                  dx2  *           dx1  * p1111 ) ) ...
        - OS;
        end
    end
end

end

