function [ Interpolant ] = interpolate4D( x1, x2, x3, x4, x11D, x21D, x31D, x41D, Logflag, V4D,OS )

  Interpolant = zeros( size( x1, 1 ), 1 );
  
  for i = 1 : size( x1, 1 ) % x1,x2,x3,x4 have same size

    ix1 = find( x11D < x1(i), 1, 'last' );
    ix2 = find( x21D < x2(i), 1, 'last' );
    ix3 = find( x31D < x3(i), 1, 'last' );
    ix4 = find( x41D < x4(i), 1, 'last' );
    
    if (size(ix1,1)*size(ix2,1)*size(ix3,1)*size(ix4,1) ~= 1)
        disp('Error in interpolate4D: Outside table boundary.')
        return
    end
    
    if ( Logflag(1) == 1 ) dx1 = log10( x1(i) / x11D(ix1) ) / log10( x11D(ix1+1) / x11D(ix1) );
    elseif ( Logflag(1) == 0 ) dx1 = ( x1(i) - x11D(ix1) ) / ( x11D(ix1+1) - x11D(ix1) );
    end 
    
    if ( Logflag(2) == 1 ) dx2 = log10( x2(i) / x21D(ix2) ) / log10( x21D(ix2+1) / x21D(ix2) );
    elseif ( Logflag(2) == 0 ) dx2 = ( x2(i) - x21D(ix2) ) / ( x21D(ix2+1) - x21D(ix2) );
    end 
    
    if ( Logflag(3) == 1 ) dx3 = log10( x3(i) / x31D(ix3) ) / log10( x31D(ix3+1) / x31D(ix3) );
    elseif ( Logflag(3) == 0 ) dx3 = ( x3(i) - x31D(ix3) ) / ( x31D(ix3+1) - x31D(ix3) );
    end 
    
    if ( Logflag(4) == 1 ) dx4 = log10( x4(i) / x41D(ix4) ) / log10( x41D(ix4+1) / x41D(ix4) );
    elseif ( Logflag(4) == 0 ) dx4 = ( x4(i) - x41D(ix4) ) / ( x41D(ix4+1) - x41D(ix4) );
    end 
    
    p0000 = log10( V4D( ix1  , ix2  , ix3  , ix4   ) + OS );
    p1000 = log10( V4D( ix1+1, ix2  , ix3  , ix4   ) + OS );
    p0100 = log10( V4D( ix1  , ix2+1, ix3  , ix4   ) + OS );
    p1100 = log10( V4D( ix1+1, ix2+1, ix3  , ix4   ) + OS );
    p0010 = log10( V4D( ix1  , ix2  , ix3+1, ix4   ) + OS );
    p1010 = log10( V4D( ix1+1, ix2  , ix3+1, ix4   ) + OS );
    p0110 = log10( V4D( ix1  , ix2+1, ix3+1, ix4   ) + OS );
    p1110 = log10( V4D( ix1+1, ix2+1, ix3+1, ix4   ) + OS );
    p0001 = log10( V4D( ix1  , ix2  , ix3  , ix4+1 ) + OS );
    p1001 = log10( V4D( ix1+1, ix2  , ix3  , ix4+1 ) + OS );
    p0101 = log10( V4D( ix1  , ix2+1, ix3  , ix4+1 ) + OS );
    p1101 = log10( V4D( ix1+1, ix2+1, ix3  , ix4+1 ) + OS );
    p0011 = log10( V4D( ix1  , ix2  , ix3+1, ix4+1 ) + OS );
    p1011 = log10( V4D( ix1+1, ix2  , ix3+1, ix4+1 ) + OS );
    p0111 = log10( V4D( ix1  , ix2+1, ix3+1, ix4+1 ) + OS );
    p1111 = log10( V4D( ix1+1, ix2+1, ix3+1, ix4+1 ) + OS );
    
    Interpolant(i)...
      = 10.0^(...          
      (1.0d0 - dx4) ...
            * (   (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0000   ...
                + (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) *           dx1  * p1000   ...
                + (1.0d0 - dx3) * ...
                                  dx2  * (1.0d0 - dx1) * p0100   ...
                + (1.0d0 - dx3) * ...
                                  dx2  *           dx1  * p1100   ...
                +           dx3  * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0010   ...
                +           dx3  * ...
                        (1.0d0 - dx2) *           dx1  * p1010   ...
                +           dx3  * ...
                                  dx2  * (1.0d0 - dx1) * p0110   ...
                +           dx3  * ...
                                  dx2  *           dx1  * p1110 ) ...
          +         dx4  ...
            * (   (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0001   ...
                + (1.0d0 - dx3) * ...
                        (1.0d0 - dx2) *           dx1  * p1001   ...
                + (1.0d0 - dx3) * ...
                                  dx2  * (1.0d0 - dx1) * p0101   ...
                + (1.0d0 - dx3) * ...
                                  dx2  *           dx1  * p1101   ...
                +           dx3  * ...
                        (1.0d0 - dx2) * (1.0d0 - dx1) * p0011   ...
                +           dx3  * ...
                        (1.0d0 - dx2) *           dx1  * p1011   ...
                +           dx3  * ...
                                  dx2  * (1.0d0 - dx1) * p0111   ...
                +           dx3  * ...
                                  dx2  *           dx1  * p1111 ) ) ...
        - OS;
  end

end

